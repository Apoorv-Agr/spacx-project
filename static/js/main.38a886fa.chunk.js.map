{"version":3,"sources":["css/style.js","constants/index.js","components/childComponents/FilterDisplayComponent.js","components/childComponents/FilterComponent.js","actions/index.js","components/childComponents/ListComponent.js","components/childComponents/HeaderComponent.js","components/childComponents/FooterComponent.js","components/containers/ContainerComponent.js","components/containers/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["styleObj","backgroundColor","filterStyle","borderRadius","padding","textAlign","horizontalLineObj","width","margin","filterDiv","display","gridTemplateColumns","gridGap","marginBottom5","marginBottom","loaderStyle","position","top","left","transform","marginTop","YEARS_ARR","FilterDisplayComponent","props","state","this","selectedVal","onBtnClick","style","heading","typeData","dataArr","map","val","idx","Button","key","variant","size","active","onClick","Component","FilterComponent","selectedLaunch","selectedLanding","onYearSelect","setState","prevState","getLaunchFilterDataAction","year","successLaunch","successLand","onLaunchSelect","onLandSelect","Col","lg","xs","React","connect","appState","loader","getLaunchDataReducer","showLoader","dispatch","obj","url","type","fetch","then","res","json","jsonResp","payload","catch","err","getLaunchFilterData","ListComponent","getLaunchData","data","Row","Spinner","animation","length","el","launch_date_unix","flight_number","rocket","links","mission_id","launch_year","launch_success","rocket_id","Card","Img","src","mission_patch_small","Body","Title","rocket_name","ListGroup","className","ListGroupItem","first_stage","cores","land_success","HeaderComponent","FooterComponent","ContainerComponent","getLaunchDataAction","Container","fluid","App","Boolean","window","location","hostname","match","initialAppState","error","isPending","getAppData","combineReducers","action","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.38a886fa.chunk.js","sourcesContent":["export const styleObj = {\n  backgroundColor: \"#ebe9e9\",\n};\n\nexport const filterStyle = {\n  backgroundColor: \"rgb(254, 254, 254)\",\n  borderRadius: \"5px\",\n  padding: \"20px 20px 50px 20px\",\n};\n\nexport const textAlign = {\n  textAlign: \"center\",\n};\n\nexport const horizontalLineObj = {\n  width: \"80%\",\n  margin: \"10px auto\",\n  backgroundColor: \"#d4d4d4\",\n};\n\nexport const filterDiv = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr\",\n  gridGap: \"15px\",\n};\n\nexport const marginBottom5 = {\n  marginBottom: \"5px\",\n};\nexport const loaderStyle = {\n  position: \"relative\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  marginBottom: \"20px\",\n  marginTop: \"60px\",\n};\n","export const GET_DATA_ON_LOAD_PENDING = \"GET_DATA_ON_LOAD_PENDING\";\nexport const GET_DATA_ON_LOAD_SUCCESS = \"GET_DATA_ON_LOAD_SUCCESS\";\nexport const GET_DATA_ON_LOAD_FAIL = \"GET_DATA_ON_LOAD_FAIL\";\n\nexport const GET_DATA_ON_FILTER_PENDING = \"GET_DATA_ON_FILTER_PENDING\";\nexport const GET_DATA_ON_FILTER_SUCCESS = \"GET_DATA_ON_FILTER_SUCCESS\";\nexport const GET_DATA_ON_FILTER_FAIL = \"GET_DATA_ON_FILTER_FAIL\";\n\nexport const YEARS_ARR = [\n  2006,\n  2007,\n  2008,\n  2009,\n  2010,\n  2011,\n  2012,\n  2013,\n  2014,\n  2015,\n  2016,\n  2017,\n  2018,\n  2019,\n  2020,\n];\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { textAlign, horizontalLineObj, filterDiv } from \"../../css/style\";\n\nclass FilterDisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { selectedVal, onBtnClick } = this.props;\n    return (\n      <>\n        <div style={textAlign}>{this.props.heading}</div>\n        <hr style={horizontalLineObj}></hr>\n        <div style={filterDiv}>\n          {this.props.typeData === \"num\"\n            ? this.props.dataArr.map((val, idx) => {\n                return (\n                  <Button\n                    key={`${val}_${idx}`}\n                    variant=\"success\"\n                    size=\"sm\"\n                    active={val === selectedVal ? true : false}\n                    onClick={() => {\n                      onBtnClick(val);\n                    }}\n                  >\n                    {val}\n                  </Button>\n                );\n              })\n            : this.props.dataArr.map((val, idx) => {\n                return (\n                  <Button\n                    key={`${val}_${idx}`}\n                    variant=\"success\"\n                    size=\"sm\"\n                    active={val === selectedVal ? true : false}\n                    onClick={() => {\n                      onBtnClick(val);\n                    }}\n                  >\n                    {val === true ? \"True\" : \"False\"}\n                  </Button>\n                );\n              })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default FilterDisplayComponent;\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { filterStyle } from \"../../css/style\";\nimport { YEARS_ARR } from \"../../constants\";\nimport FilterDisplayComponent from \"./FilterDisplayComponent\";\nimport { getLaunchFilterData } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass FilterComponent extends React.Component {\n  state = { selectedVal: null, selectedLaunch: null, selectedLanding: null };\n  onYearSelect = (val) => {\n    this.setState(\n      (prevState) => ({\n        selectedVal: val === prevState.selectedVal ? null : val,\n      }),\n      () => {\n        this.props.getLaunchFilterDataAction({\n          year: this.state.selectedVal,\n          successLaunch: this.state.selectedLaunch,\n          successLand: this.state.selectedLanding,\n        });\n      }\n    );\n    // this.setState({ selectedVal: val });\n  };\n  onLaunchSelect = (val) => {\n    this.setState(\n      (prevState) => ({\n        selectedLaunch: val === prevState.selectedLaunch ? null : val,\n      }),\n      () => {\n        this.props.getLaunchFilterDataAction({\n          year: this.state.selectedVal,\n          successLaunch: this.state.selectedLaunch,\n          successLand: this.state.selectedLanding,\n        });\n      }\n    );\n  };\n  onLandSelect = (val) => {\n    this.setState(\n      (prevState) => ({\n        selectedLanding: val === prevState.selectedLanding ? null : val,\n      }),\n      () => {\n        this.props.getLaunchFilterDataAction({\n          year: this.state.selectedVal,\n          successLaunch: this.state.selectedLaunch,\n          successLand: this.state.selectedLanding,\n        });\n      }\n    );\n  };\n  render() {\n    return (\n      <Col lg={2} xs={12}>\n        <div style={filterStyle}>\n          <FilterDisplayComponent\n            heading=\"Launch Year\"\n            typeData=\"num\"\n            dataArr={YEARS_ARR}\n            selectedVal={this.state.selectedVal}\n            onBtnClick={this.onYearSelect}\n          />\n          <br />\n          <FilterDisplayComponent\n            heading=\"Successful Launch\"\n            typeData=\"bool\"\n            dataArr={[true, false]}\n            selectedVal={this.state.selectedLaunch}\n            onBtnClick={this.onLaunchSelect}\n          />\n          <br />\n          <FilterDisplayComponent\n            heading=\"Successful Landing\"\n            typeData=\"bool\"\n            dataArr={[true, false]}\n            selectedVal={this.state.selectedLanding}\n            onBtnClick={this.onLandSelect}\n          />\n          <br />\n        </div>\n      </Col>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLaunchFilterDataAction: (obj) => {\n      dispatch(getLaunchFilterData(obj));\n    },\n  };\n};\nconst mapStateToProps = (appState) => {\n  return {\n    loader: appState.getLaunchDataReducer.showLoader,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterComponent);\n","import {\n  GET_DATA_ON_LOAD_PENDING,\n  GET_DATA_ON_LOAD_FAIL,\n  GET_DATA_ON_LOAD_SUCCESS,\n  GET_DATA_ON_FILTER_PENDING,\n  GET_DATA_ON_FILTER_SUCCESS,\n  GET_DATA_ON_FILTER_FAIL,\n} from \"../constants\";\nexport const getLaunchData = () => {\n  return (dispatch) => {\n    dispatch({ type: GET_DATA_ON_LOAD_PENDING });\n    fetch(`https://api.spaceXdata.com/v3/launches?limit=100`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((jsonResp) => {\n        dispatch({ type: GET_DATA_ON_LOAD_SUCCESS, payload: jsonResp });\n      })\n      .catch((err) => {\n        dispatch({ type: GET_DATA_ON_LOAD_FAIL, payload: err });\n      });\n  };\n};\nexport const getLaunchFilterData = ({\n  year,\n  successLaunch = null,\n  successLand = null,\n}) => {\n  return (dispatch) => {\n    let url = `https://api.spaceXdata.com/v3/launches?limit=100`;\n    if (year) {\n      url += `&launch_year=${year}`;\n    }\n    if (successLaunch != null) {\n      url += `&launch_success=${successLaunch}`;\n    }\n    if (successLand != null) {\n      url += `&land_success=${successLand}`;\n    }\n    dispatch({ type: GET_DATA_ON_FILTER_PENDING });\n    fetch(url)\n      .then((res) => {\n        return res.json();\n      })\n      .then((jsonResp) => {\n        dispatch({ type: GET_DATA_ON_FILTER_SUCCESS, payload: jsonResp });\n      })\n      .catch((err) => {\n        dispatch({ type: GET_DATA_ON_FILTER_FAIL, payload: err });\n      });\n  };\n};\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { loaderStyle } from \"../../css/style\";\n\nclass ListComponent extends React.Component {\n  state = {};\n  render() {\n    const { data, showLoader } = this.props.getLaunchData;\n    return (\n      <Col lg={10} xs={12}>\n        <Row>\n          {showLoader ? (\n            <Col lg={3} xs={12} style={loaderStyle}>\n              <span>\n                <b>Loading...</b>\n              </span>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </Col>\n          ) : data && data.length ? (\n            data.map((el, idx) => {\n              const {\n                launch_date_unix,\n                flight_number,\n                rocket,\n                links,\n                mission_id,\n                launch_year,\n                launch_success,\n              } = el;\n              return (\n                <Col\n                  key={`${launch_date_unix}_${flight_number}_${rocket.rocket_id}`}\n                  lg={3}\n                  xs={12}\n                  style={{ marginBottom: \"20px\" }}\n                >\n                  <Card>\n                    <Card.Img variant=\"top\" src={links.mission_patch_small} />\n                    <Card.Body>\n                      <Card.Title>{rocket.rocket_name}</Card.Title>\n                      <b>Mission Ids: </b>\n                      <ul>\n                        {mission_id.map((el, idx) => {\n                          return <li key={`${el}_${idx}`}>{el}</li>;\n                        })}\n                      </ul>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem>\n                        <b>Launch Year: </b>\n                        {launch_year}\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <b>Successful Launch: </b>\n                        {launch_success ? \"true\" : \"false\"}\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <b>Successful Landing: </b>\n                        {rocket.first_stage.cores &&\n                        rocket.first_stage.cores[0].land_success\n                          ? \"true\"\n                          : \"false\"}\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card>\n                </Col>\n              );\n            })\n          ) : (\n            <Col lg={3} xs={12} style={loaderStyle}>\n              <span>\n                <b>Data Not Found!</b>\n              </span>\n            </Col>\n          )}\n        </Row>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (appState) => {\n  return {\n    getLaunchData: appState.getLaunchDataReducer,\n  };\n};\n\nexport default connect(mapStateToProps, {})(ListComponent);\n","import React, { Component } from \"react\";\nclass HeaderComponent extends Component {\n  state = {};\n  render() {\n    return <h3>SpaceX Launch Programs</h3>;\n  }\n}\n\nexport default HeaderComponent;\n","import React, { Component } from \"react\";\n// import { Row } from \"react-bootstrap\";\nimport { textAlign, marginBottom5 } from \"../../css/style\";\nclass FooterComponent extends Component {\n  state = {};\n  render() {\n    return (\n      <div style={{ ...textAlign, ...marginBottom5 }}>\n        <span>\n          {\" \"}\n          <b>Developed by : </b>Apoorv Agrawal\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default FooterComponent;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport FilterComponent from \"../childComponents/FilterComponent\";\nimport ListComponent from \"../childComponents/ListComponent\";\nimport HeaderComponent from \"../childComponents/HeaderComponent\";\nimport FooterComponent from \"../childComponents/FooterComponent\";\nimport { connect } from \"react-redux\";\nimport { getLaunchData } from \"../../actions\";\nimport { styleObj } from \"../../css/style\";\n\nclass ContainerComponent extends React.Component {\n  state = {};\n  componentDidMount() {\n    this.props.getLaunchDataAction();\n  }\n\n  render() {\n    return (\n      <Container fluid={true} style={styleObj}>\n        <HeaderComponent />\n        <Row>\n          <FilterComponent />\n          <ListComponent />\n        </Row>\n        <FooterComponent />\n      </Container>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLaunchDataAction: () => {\n      dispatch(getLaunchData());\n    },\n  };\n};\nconst mapStateToProps = (appState) => {\n  return {\n    loader: appState.getLaunchDataReducer.showLoader,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerComponent);\n","import React from \"react\";\n// import \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport ContainerComponent from \"./ContainerComponent\";\n\nfunction App() {\n  return (\n    <div>\n      <ContainerComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_DATA_ON_LOAD_PENDING,\n  GET_DATA_ON_LOAD_FAIL,\n  GET_DATA_ON_LOAD_SUCCESS,\n  GET_DATA_ON_FILTER_PENDING,\n  GET_DATA_ON_FILTER_SUCCESS,\n  GET_DATA_ON_FILTER_FAIL,\n} from \"../constants\";\n\nimport { combineReducers } from \"redux\";\n\nconst initialAppState = {\n  data: [],\n  error: \"\",\n  isPending: false,\n  showLoader: true,\n};\n\nconst getLaunchDataReducer = (state = initialAppState, action = {}) => {\n  //   debugger;\n  switch (action.type) {\n    case GET_DATA_ON_LOAD_PENDING:\n      return { ...state, isPending: true, showLoader: true };\n    case GET_DATA_ON_LOAD_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isPending: false,\n        showLoader: false,\n      };\n    case GET_DATA_ON_LOAD_FAIL:\n      return {\n        ...state,\n        isPending: false,\n        error: action.payload,\n        showLoader: false,\n      };\n    case GET_DATA_ON_FILTER_PENDING:\n      return { ...state, data: [], isPending: true, showLoader: true };\n    case GET_DATA_ON_FILTER_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isPending: false,\n        showLoader: false,\n      };\n    case GET_DATA_ON_FILTER_FAIL:\n      return {\n        ...state,\n        data: [],\n        isPending: false,\n        error: action.payload,\n        showLoader: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst getAppData = combineReducers({ getLaunchDataReducer });\n\nexport default getAppData;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./components/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport getAppData from \"./reducers\";\nconst logger = createLogger();\nconst store = createStore(getAppData, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}